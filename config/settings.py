"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""
import os 
import environ

from pathlib import Path
from datetime import timedelta

from django.templatetags.static import static
from django.urls import reverse_lazy, reverse
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-@h$ip1m75fps@-an#-rq!s=b2zs0gq+yos8-dmc&l&&#e9l$=l'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG", default="False").lower() == "true"


ALLOWED_HOSTS = env("ALLOWED_HOST", default="localhost").split(",")


CORS_ALLOWED_ORIGINS = env("CORS_ALLOWED_ORIGINS", default="http://localhost:8000").split(",")
CORS_ALLOW_ALL_ORIGINS = False
CORS_ALLOW_HEADERS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_browser_reload',
    'rest_framework',
    'rest_framework_simplejwt',
    'corsheaders',
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    'cash_collector.apps.CashCollectorConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "django_browser_reload.middleware.BrowserReloadMiddleware",
]


REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
}


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=60 * 5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=2),
    "ROTATE_REFRESH_TOKENS": True,
}

TAILWIND_APP_NAME = 'theme'

INTERNAL_IPS = [
    "127.0.0.1",
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases
DATABASES = {
    "default": {
        "ENGINE": env("DB_ENGINE", default="django.db.backends.sqlite3"),
        "NAME": env("DB_NAME", default=os.path.join(BASE_DIR, "db.sqlite3")),
        "USER": env("DB_USER", default=""),
        "PASSWORD": env("DB_PASSWORD", default=""),
        "HOST": env("DB_HOST", default=""),
        "PORT": env("DB_PORT", default=""),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


UNFOLD = {
    "SITE_TITLE": "Cash Collector",
    "SITE_HEADER": "Cash Collector",
    "SITE_URL": "/admin",
    "SITE_ICON": lambda request: None,
    "SHOW_HISTORY": False,
    "LOGIN": {
        "image": lambda r: None,
        "redirect_after": lambda r: reverse_lazy("admin:index"),
    },
    "COLORS": {
    "primary": {
        "50": "230 242 255",
        "100": "163 206 255",
        "200": "122 180 255",
        "300": "81 149 252",
        "400": "38 112 240",
        "500": "0 77 227",
        "600": "0 57 189",
        "700": "0 40 150",
        "800": "0 26 112",
        "900": "0 15 74",
    },
    },
        "SIDEBAR": {
        "show_search": False,  # Search in applications and models names
        "show_all_applications": False,  # Dropdown with all applications and models
        "navigation": [
            {
                # "title": _("Navigation"),
                "separator": False,  # Top border
                "items": [
                    {
                        "title": _("Dashboard"),
                        "icon": "dashboard",  # Supported icon set: https://fonts.google.com/icons
                        "link": reverse_lazy("admin:index"),
                        # "badge": "3",
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Managers"),
                        "icon": "person",
                        # "link": reverse_lazy("admin:cash_collector_manager_changelist"),
                        "link": "admin:cash_collector_manager_changelist",
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Cash Collectors"),
                        "icon": "paid",
                        # "link": reverse_lazy("admin:cash_collector_cashcollector_changelist"),
                        "link": "admin:cash_collector_cashcollector_changelist",
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Customers"),
                        "icon": "people",
                        # "link": reverse_lazy("admin:cash_collector_customer_changelist"),
                        "link": "admin:cash_collector_customer_changelist",
                        "permission": lambda request: request.user.is_superuser,
                    },
                    {
                        "title": _("Tasks"),
                        "icon": "task",
                        # "link": reverse_lazy("admin:cash_collector_task_changelist"),
                        "link": "admin:cash_collector_task_changelist",
                        "permission": lambda request: request.user.is_superuser,
                    }
                ],
            },
        ],
    },
}

# APP environment variables
collected_cash_threshold = env("COLLECTED_CASH_THRESHOLD", default=5000)
frozen_status_threshold_hours = env("FROZEN_STATUS_THRESHOLD_HOURS", default=24 * 2)
